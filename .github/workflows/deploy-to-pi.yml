name: Deploy to Raspberry Pi
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Install frontend build
        run: |
          sudo mkdir -p /home/smart-oven/frontend
          sudo cp -r ./frontend/dist/* /home/smart-oven/frontend/

      - name: Install/Update systemd units from repo
        run: |
          # Copy unit files from the repo into systemd dir
          sudo install -m 0644 deploy/systemd/oven-frontend.service /etc/systemd/system/oven-frontend.service
          sudo install -m 0644 deploy/systemd/oven-kiosk.service /etc/systemd/system/oven-kiosk.service
          sudo install -m 0644 deploy/systemd/github-actions-runner.service /etc/systemd/system/github-actions-runner.service
          # Pick chromium path if different:
          if [ -x /usr/bin/chromium ] && ! grep -q '/usr/bin/chromium ' /etc/systemd/system/oven-kiosk.service; then
            echo "Warning: chromium path might be /usr/bin/chromium on this system."
          fi
          # Reload & enable services
          sudo systemctl daemon-reload
          sudo systemctl enable oven-frontend.service
          sudo systemctl enable oven-kiosk.service
          sudo systemctl enable github-actions-runner.service

  deploy-backend:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4

      - name: Enable Docker Buildx (optional)
        uses: docker/setup-buildx-action@v3

      - name: Compose up
        working-directory: ./api
        run: |
          docker compose down || true
          docker compose up -d --build

      - name: Wait for container to start
        run: |
          sleep 15

      - name: Get container logs
        working-directory: ./api
        run: |
          echo "=== Container Logs ==="
          docker compose logs api
          echo "=== End Container Logs ==="
        continue-on-error: true

      - name: Check container status
        working-directory: ./api
        run: |
          echo "=== Container Status ==="
          docker compose ps
          echo "=== End Container Status ==="
        continue-on-error: true

      - name: Smoke test
        run: |
          curl -sSf http://127.0.0.1:8081/health

  reboot:
    runs-on: [self-hosted]
    needs: [deploy, deploy-backend]
    continue-on-error: true # Allow failure on this job
    timeout-minutes: 1 # Prevent hanging indefinitely
    steps:
      - name: Restart Raspberry Pi
        run: |
          sudo reboot  # Reboot happens after the deploy job finishes
