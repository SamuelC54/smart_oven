name: Deploy to Raspberry Pi
on:
  push:
    branches: [main]
    paths:
      - "frontend/**"
      - "deploy/**"
      - "api/**"
      - ".github/workflows/**"
      - ".github/actions/**"

jobs:
  determine-changes:
    runs-on: [self-hosted]
    outputs:
      frontend-should-run: ${{ steps.changes.outputs.frontend }}
      systemd-should-run: ${{ steps.changes.outputs.systemd }}
      api-should-run: ${{ steps.changes.outputs.api }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine what changed
        id: changes
        run: |
          # Check for frontend changes
          if [[ "${{ github.event.head_commit.modified }}" == *"frontend/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *"frontend/"* ]] || \
             [[ "${{ github.event.head_commit.modified }}" == *".github/workflows/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *".github/workflows/"* ]] || \
             [[ "${{ github.event.head_commit.modified }}" == *".github/actions/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *".github/actions/"* ]]; then
            echo "frontend=true" >> $GITHUB_OUTPUT
          else
            echo "frontend=false" >> $GITHUB_OUTPUT
          fi

          # Check for systemd changes
          if [[ "${{ github.event.head_commit.modified }}" == *"deploy/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *"deploy/"* ]] || \
             [[ "${{ github.event.head_commit.modified }}" == *".github/workflows/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *".github/workflows/"* ]] || \
             [[ "${{ github.event.head_commit.modified }}" == *".github/actions/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *".github/actions/"* ]]; then
            echo "systemd=true" >> $GITHUB_OUTPUT
          else
            echo "systemd=false" >> $GITHUB_OUTPUT
          fi

          # Check for api changes
          if [[ "${{ github.event.head_commit.modified }}" == *"api/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *"api/"* ]] || \
             [[ "${{ github.event.head_commit.modified }}" == *".github/workflows/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *".github/workflows/"* ]] || \
             [[ "${{ github.event.head_commit.modified }}" == *".github/actions/"* ]] || \
             [[ "${{ github.event.head_commit.added }}" == *".github/actions/"* ]]; then
            echo "api=true" >> $GITHUB_OUTPUT
          else
            echo "api=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug - Show commit info
        run: |
          echo "Commit SHA: ${{ github.sha }}"
          echo "Previous commit: ${{ github.event.before }}"
          echo "Current commit: ${{ github.event.after }}"
          echo ""
          echo "Modified files in this commit:"
          echo "${{ github.event.head_commit.modified }}"
          echo ""
          echo "Added files in this commit:"
          echo "${{ github.event.head_commit.added }}"
          echo ""
          echo "Removed files in this commit:"
          echo "${{ github.event.head_commit.removed }}"
          echo ""
          echo "Files changed between commits:"
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }} || echo "Could not get diff"
          echo ""
          echo "=== Job Conditions ==="
          echo "FRONTEND_JOB_SHOULD_RUN: ${{ steps.changes.outputs.frontend }}"
          echo "SYSTEMD_JOB_SHOULD_RUN: ${{ steps.changes.outputs.systemd }}"
          echo "API_JOB_SHOULD_RUN: ${{ steps.changes.outputs.api }}"

  frontend:
    runs-on: [self-hosted]
    needs: determine-changes
    if: needs.determine-changes.outputs.frontend-should-run == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Install frontend build
        run: |
          sudo mkdir -p /home/smart-oven/frontend
          sudo cp -r ./frontend/dist/* /home/smart-oven/frontend/

  systemd:
    runs-on: [self-hosted]
    needs: determine-changes
    if: needs.determine-changes.outputs.systemd-should-run == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Install/Update systemd units from repo
        run: |
          # Copy unit files from the repo into systemd dir
          sudo install -m 0644 deploy/systemd/oven-frontend.service /etc/systemd/system/oven-frontend.service
          sudo install -m 0644 deploy/systemd/oven-kiosk.service /etc/systemd/system/oven-kiosk.service
          sudo install -m 0644 deploy/systemd/github-actions-runner.service /etc/systemd/system/github-actions-runner.service
          # Pick chromium path if different:
          if [ -x /usr/bin/chromium ] && ! grep -q '/usr/bin/chromium ' /etc/systemd/system/oven-kiosk.service; then
            echo "Warning: chromium path might be /usr/bin/chromium on this system."
          fi
          # Reload & enable services
          sudo systemctl daemon-reload
          sudo systemctl enable oven-frontend.service
          sudo systemctl enable oven-kiosk.service
          sudo systemctl enable github-actions-runner.service

  api:
    runs-on: [self-hosted]
    needs: determine-changes
    if: needs.determine-changes.outputs.api-should-run == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Enable Docker Buildx (optional)
        uses: docker/setup-buildx-action@v3

      - name: Compose up
        working-directory: ./api
        run: |
          docker compose down || true
          docker compose up -d --build

      - name: Wait for container to start
        run: |
          sleep 15

      - name: Get container logs
        working-directory: ./api
        run: |
          echo "=== Container Logs ==="
          docker compose logs api
          echo "=== End Container Logs ==="
        continue-on-error: true

      - name: Check container status
        working-directory: ./api
        run: |
          echo "=== Container Status ==="
          docker compose ps
          echo "=== End Container Status ==="
        continue-on-error: true

      - name: Expose API for external access
        run: |
          # Allow incoming connections on port 8081 using iptables
          sudo iptables -A INPUT -p tcp --dport 8081 -j ACCEPT

          # Get Pi's IP address
          PI_IP=$(hostname -I | awk '{print $1}')

          echo "=========================================="
          echo "API is now accessible from external devices:"
          echo "http://$PI_IP:8081/"
          echo "http://$PI_IP:8081/health"
          echo "http://$PI_IP:8081/logs"
          echo "=========================================="

          # Show iptables rules for port 8081
          echo "Firewall rules for port 8081:"
          sudo iptables -L INPUT -n | grep 8081 || echo "Port 8081 rule added"

      - name: Smoke test
        run: |
          curl -sSf http://127.0.0.1:8081/health

  reboot:
    runs-on: [self-hosted]
    needs: [frontend, systemd, api]
    if: always() && needs.systemd.result == 'success'
    continue-on-error: true # Allow failure on this job
    timeout-minutes: 1 # Prevent hanging indefinitely
    steps:
      - name: Reboot Raspberry Pi
        uses: ./.github/actions/reboot-pi.yml
        with:
          reason: "Systemd configuration changed. Rebooting Pi to restart all services with new configs."
          wait_seconds: "10"
