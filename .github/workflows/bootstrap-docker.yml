name: Bootstrap Docker on Pi
on:
  workflow_dispatch:

jobs:
  install-docker:
    runs-on: [self-hosted]
    steps:
      - name: Who am I?
        run: |
          whoami
          id

      - name: Install Docker Engine (rootful)
        run: |
          # Requires passwordless sudo for the runner user
          curl -fsSL https://get.docker.com | sudo sh
          sudo systemctl enable --now docker

      - name: Install Compose plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      - name: Add runner user to docker group
        run: |
          USERNAME="$(id -un)"
          sudo usermod -aG docker "$USERNAME"
          echo "Added $USERNAME to docker group."

      - name: Enable SPI interface
        run: |
          # Enable SPI interface using raspi-config non-interactive mode
          echo "Enabling SPI interface..."
          sudo raspi-config nonint do_spi 0
          echo "SPI interface enabled successfully"

      - name: Set up GPIO permissions
        run: |
          # GPIO is enabled by default, but we need proper group setup
          echo "Setting up GPIO permissions..."

          # Ensure gpio group exists
          sudo groupadd -f gpio

          # Add user to gpio group
          USERNAME="$(id -un)"
          sudo usermod -aG gpio "$USERNAME"
          echo "Added $USERNAME to gpio group."

          # Ensure /dev/gpiomem has correct permissions
          if [ -e /dev/gpiomem ]; then
            sudo chown root:gpio /dev/gpiomem
            sudo chmod 660 /dev/gpiomem
            echo "Set /dev/gpiomem permissions to root:gpio 660"
          else
            echo "Warning: /dev/gpiomem not found (will be created after reboot)"
          fi

      - name: Verify hardware devices
        run: |
          echo "Checking for SPI devices..."
          ls -la /dev/spidev* || echo "SPI devices not found yet (may need reboot)"
          echo "Checking for GPIO device..."
          ls -la /dev/gpiomem || echo "GPIO device not found yet (may need reboot)"
          echo "Checking SPI kernel modules..."
          lsmod | grep spi || echo "SPI modules not loaded yet"
          echo "Checking GPIO kernel modules..."
          lsmod | grep gpio || echo "GPIO modules not loaded yet"
          echo "Checking user groups..."
          groups

      - name: Sanity check (using sudo; group not active yet)
        run: |
          sudo docker info
          sudo docker run --rm hello-world
          sudo docker compose version

      - name: Next steps
        run: |
          echo "=============================================================="
          echo "Docker installed, SPI enabled, and GPIO permissions set up."
          echo "You must now REBOOT the Pi (or restart the self-hosted runner"
          echo "service) so your user picks up 'docker' and 'gpio' groups and"
          echo "hardware devices are available. After reboot, rerun your"
          echo "deploy workflow."
          echo "=============================================================="

  reboot:
    runs-on: [self-hosted]
    needs: [install-docker]
    continue-on-error: true # Allow failure on this job
    timeout-minutes: 1 # Prevent hanging indefinitely
    steps:
      - name: Restart Raspberry Pi
        run: |
          sudo reboot  # Reboot happens after the deploy job finishes
